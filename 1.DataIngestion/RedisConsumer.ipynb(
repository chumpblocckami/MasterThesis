{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import time \n",
    "import datetime\n",
    "from datetime import timedelta\n",
    "import json\n",
    "import redis \n",
    "import bz2\n",
    "import pymongo \n",
    "import dns\n",
    "\n",
    "Consumer = redis.Redis(host='localhost', port=6379,db=0)\n",
    "\n",
    "mongo_psswd = open('files/mongo_psswd.txt','r').readline().strip()\n",
    "cluster = pymongo.MongoClient('mongodb+srv://ciotolaaaa:'+mongo_psswd+'@mmazzola29-vgdjv.mongodb.net/TEST_COVID?retryWrites=true&w=majority')\n",
    "db = cluster.TEST_COVID\n",
    "collections_ = db.TEST_COVID\n",
    "\n",
    "def save2mongo(item):\n",
    "    global cluster,db,collections_\n",
    "    if(type(item)==list):\n",
    "        collections_.insert_many(item)\n",
    "    else:\n",
    "        collections_.insert_one(item)\n",
    "    print(\"imported\",len(item),\"tweets\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "imported 339 tweets\n",
      "imported 1432 tweets\n",
      "imported 1972 tweets\n",
      "imported 1520 tweets\n",
      "imported 1301 tweets\n",
      "imported 1255 tweets\n",
      "imported 1350 tweets\n",
      "imported 1658 tweets\n",
      "imported 2073 tweets\n",
      "imported 2164 tweets\n",
      "imported 1640 tweets\n",
      "imported 1635 tweets\n",
      "imported 1562 tweets\n",
      "imported 1295 tweets\n",
      "imported 1280 tweets\n",
      "imported 1497 tweets\n",
      "imported 1907 tweets\n",
      "imported 1852 tweets\n",
      "imported 1430 tweets\n",
      "imported 1271 tweets\n",
      "imported 611 tweets\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n",
      "No data to read, waiting...\n"
     ]
    }
   ],
   "source": [
    "cursor = '0'\n",
    "while True:\n",
    "    try:\n",
    "        cursor, keys = Consumer.scan(cursor=cursor, count=100_000)\n",
    "        redis_list = Consumer.mget(*keys)\n",
    "        save2mongo([json.loads(bz2.decompress(x).decode(\"utf-8\")) for x in redis_list])\n",
    "        with Consumer.pipeline() as pipe:\n",
    "            for x in keys:\n",
    "                pipe.expire(x,timedelta(seconds=0))\n",
    "            pipe.execute()\n",
    "        time.sleep(10)\n",
    "    except:\n",
    "        print(\"No data to read, waiting...\")\n",
    "        time.sleep(10)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
